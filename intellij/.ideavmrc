"" Base Settings
"" ========================================================

set scrolloff=10
set relativenumber
set showmode
set showcmd

set smartcase
set incsearch
set hlsearch

set visualbell
set wildmenu

" Use system clipboard
set clipboard+=unnamed

let mapleader = " "


"" Plugin Settings
"" ========================================================

set nerdtree
set surround
set highlightedyank
" Easymotion settings
set easymotion
set notimeout
" Which-key settings
set which-key
let g:WhichKey_FontSize = 16
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"

"" Key mappings
"" ========================================================

inoremap jk <Esc>
imap jj <Esc>
" Tab navigation
" Wechsel zum n√§chsten Editor-Tab (wie in VS Code 'Tab')
nnoremap <Tab> :action NextTab<CR>
" Wechsel zum vorherigen Editor-Tab (wie in VS Code 'Shift-Tab')
nnoremap <S-Tab> :action PreviousTab<CR>

nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-k> <C-w>k
nnoremap <C-j> <C-w>j


" Verschiebe Zeilen nach unten im visuellen Linienmodus
vmap J :m '>+1<CR>gv=gv
" Verschiebe Zeilen nach oben im visuellen Linienmodus
vmap K :m '<-2<CR>gv=gv


" Jump between methods
nnoremap [[ <Action>(MethodUp)
nnoremap ]] <Action>(MethodDown)

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv

" Execute macro saved in 'q' register
nnoremap qj @q

" Popup navigation
inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)


"" Leader commands
"" ========================================================

" Comment lines
map <leader>/ <action>(CommentByLineComment)

" Jump around with easymotion
map <leader>j <Plug>(easymotion-s)

" Open NERDTree (use q to exit)
map <leader>e :NERDTreeToggle<CR>

" Folding
map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>

" Window splits
map <C-w>v <Action>(SplitVertically)
map <C-w>s <Action>(SplitHorizontally)
map <C-w>u <Action>(Unsplit)
map <C-w>m <Action>(MoveEditorToOppositeTabGroup)

" Display options
map <leader>dd <action>(ToggleDistractionFreeMode)
map <leader>dz <action>(ToggleZenMode)
map <leader>df <action>(ToggleFullScreen)

" ActionFOOO
map <leader>am <action>(ShowIntentionActions)
map <leader>as <action>(SearchEverywhere)

" File navigation
map <leader>ff <action>(GotoFile)
map <leader>fr <action>(RecentFiles)
map <leader>fc <action>(FindInPath)
map <leader><leader> <Action>(RecentFiles)
map <leader>fl <action>(RecentLocations)
map <leader>fs <action>(NewScratchFile)


" Close active tab
map <leader>c <action>(CloseContent)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

" Go to code
nmap <leader>gd <Action>(GotoDeclaration)
nmap gd <Action>(GotoDeclaration)
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap gI <Action>(GotoImplementation)
nmap gr <Action>FindUsages<CR>
nmap <leader>gu <Action>(ShowUsages)
nmap <leader>gt <Action>(GotoTest)
" Back / Forward
nmap <C-o> <Action>(Back)
nmap <C-i> <Action>(Forward)
* show context info
nmap K :action ShowContextInfo<CR>
" Mapping for showing all methods in the class (equivalent to Ctrl + F12)
map <leader>gm :action FileStructurePopup<CR>

" Git windows
map <leader>bc <Action>(CheckinProject)
map <leader>bs <Action>(ActivateVersionControlToolWindow)
map <leader>bg <Action>(Git.Branches)
map <leader>bh <Action>(Git.ShowFileHistoryFromLog)

" Errors
map <leader>en <Action>(ReSharperGotoNextErrorInSolution)
map <leader>ep <Action>(ReSharperGotoPrevErrorInSolution)

" Test mappings
map <leader>tm :action RunTestUnderCaret<CR>
map <leader>tc :action RunContextTest<CR>

noremap <leader>tt :echo "Leader key works!!!"<CR>
" open config
noremap <leader>cc :edit ~/.ideavimrc<cr>

" source config
noremap <leader>lc :source ~/.ideavimrc<cr>:echo "file reloaded"<cr>


" lazygit aufrufen
map <leader>gg :action ExternalTools.LazyGit<CR>

